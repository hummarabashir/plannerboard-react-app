{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_React$useState","React","useState","_React$useState2","_slicedToArray","todos","setTodos","_React$useState3","_React$useState4","todo","setTodo","_React$useState5","_React$useState6","todoEditing","setTodoEditing","_React$useState7","_React$useState8","editingText","setEditingText","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","length","stringify","setItem","removeItem","createElement","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","trim","completed","_toConsumableArray","concat","alert","type","placeholder","onChange","target","value","className","map","key","checked","updatedTodos","toggleComplete","defaultValue","style","textDecoration","onClick","_objectSpread","submitEdits","stroke","fill","stroke-width","viewBox","height","width","xmlns","d","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2d428fee.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n\n  \n  React.useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo.trim(),\n      completed: false,\n    };\n    if (newTodo.text.length > 0 ) {\n        setTodos([...todos].concat(newTodo));\n        setTodo(\"\");\n\n    } else {\n\n        alert(\"Enter Valid Task\");\n        setTodo(\"\");\n    }\n  }\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    // const updatedTodos = [...todos].map((todo) => {\n    //   if (todo.id === id) {\n    //     todo.text = editingText;\n    //     }\n    //     return todo;\n    //   });\n    //   setTodos(updatedTodos);\n    //   setTodoEditing(null);\n    const updatedTodos = todos.map((todo) =>\n    todo.id === todoEditing ? { ...todo, text: editingText } : todo\n  );\n  setTodos(updatedTodos);\n  setTodoEditing(null);\n    }\n\n    React.useEffect(() => {\n      if (todos.length > 0) {\n          const json = JSON.stringify(todos);\n          localStorage.setItem(\"todos\", json);\n      } else {\n        localStorage.removeItem(\"todos\");\n      }\n    }, [todos]);\n\n    return (\n        <div id=\"todo-list\">\n          <h1>Planner Dashboard</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Type to add a note...\"\n              onChange={(e) => setTodo(e.target.value)}\n              value={todo}\n            />\n            <button type=\"submit\">Add Todo</button>\n          </form>\n          {todos.length > 0 ? (\n            <div className=\"todo-grid\">\n          {todos.map((todo) => (\n            <div key={todo.id} className=\"todo\">\n              <div className=\"todo-text\">\n                <input\n                  type=\"checkbox\"\n                  id=\"completed\"\n                  checked={todo.completed}\n                  onChange={() => toggleComplete(todo.id)}\n                />\n                {todo.id === todoEditing ? (\n                  <input\n                    type=\"text\"\n                    className=\"inputText\"\n                    onChange={(e) => setEditingText(e.target.value)}\n                    defaultValue={todo.text}\n                  />\n                ) : (\n                  <div style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}>{todo.text}</div>\n                )}\n              </div>\n              <div className=\"todo-actions\">\n                {todo.id === todoEditing ? (\n                  <button onClick={() => submitEdits(todo.id)}>Save</button>\n                ) : (\n                  <button onClick={() => setTodoEditing(todo.id)}><svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" className=\"edit-icon text-green-900 hover:text-green-600 cursor-pointer\" height=\"1.3em\" width=\"1.3em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path></svg></button>\n                )}\n\n                <button onClick={() => deleteTodo(todo.id)}><svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" className=\"delete-icon text-green-900 hover:text-green-600 cursor-pointer\" height=\"1.3em\" width=\"1.3em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"></path></svg></button>\n              </div>\n            </div>\n          ))}\n          </div>\n          ) : (\n            <p className=\"subtext\">Nothing to show here!</p>\n          )}\n        </div>\n      );\n    };\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}